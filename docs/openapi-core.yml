openapi: 3.0.3
info:
  title: Java API Exercise - Core Criteria
  description: |-
  version: 0.2.2

servers:
  - url: http://localhost:4000
tags:
  - name: authors
paths:
  /authors:
    post:
      tags:
        - authors
      summary: POST request
      description: create new author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthor'
      responses:
        201:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    get:
      tags:
        - authors
      summary: GET request
      description: Get all authors
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllAuthors'
  /authors/{id}:
    get:
      tags:
        - authors
      summary: GET request
      description: Get an authors
      parameters:
        - name: id
          in: path
          description: The ID of the author to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    put:
      tags:
        - authors
      summary: PUT request
      description: Update an author
      parameters:
        - name: id
          in: path
          description: The ID of the author to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthor'
      responses:
        201:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    delete:
      tags:
        - authors
      summary: DELETE request
      description: delete an author
      parameters:
        - name: id
          in: path
          description: The ID of the author to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
  # PUBLISHERS
  /publishers:
    post:
      tags:
        - publishers
      summary: POST request
      description: create new publisher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePublisher'
      responses:
        201:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
    get:
      tags:
        - publishers
      summary: GET request
      description: Get all publisher
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPublisher'
  /publishers/{id}:
    get:
      tags:
        - publishers
      summary: GET request
      description: Get a publisher
      parameters:
        - name: id
          in: path
          description: The ID of the publisher to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
    put:
      tags:
        - publishers
      summary: PUT request
      description: Update an publisher
      parameters:
        - name: id
          in: path
          description: The ID of the publisher to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePublisher'
      responses:
        201:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
    delete:
      tags:
        - publishers
      summary: DELETE request
      description: delete an publisher
      parameters:
        - name: id
          in: path
          description: The ID of the publisher to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
  # BOOKS
  /books:
    post:
      tags:
        - books
      summary: POST request
      description: create new book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBook'
      responses:
        201:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    get:
      tags:
        - books
      summary: GET request
      description: Get all books
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllBooks'
  /books/{id}:
    get:
      tags:
        - books
      summary: GET request
      description: Get a book
      parameters:
        - name: id
          in: path
          description: The ID of the book to get
          required: true
          schema:
            type: integer
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    put:
      tags:
        - books
      summary: PUT request
      description: Update a book
      parameters:
        - name: id
          in: path
          description: The ID of the book to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBook'
      responses:
        201:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      tags:
        - books
      summary: DELETE request
      description: delete a book
      parameters:
        - name: id
          in: path
          description: The ID of the book to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

components:
  schemas:
    CreateAuthor:
      type: object
      required: [firstName, lastName, email, alive]
      properties:
        firstName:
          type: string
          example: "first name"
        lastName:
          type: string
          example: "first name"
        email:
          type: string
          example: "example@email.value"
        alive:
          type: boolean
          example: true
    Author:
      type: object
      properties:
        firstName:
          type: string
          example: "first name"
        lastName:
          type: string
          example: "first name"
        email:
          type: string
          format: string
          example: "example@email.value"
        alive:
          type: boolean
          example: true
    AllAuthors:
      type: array
      items:
        $ref: '#/components/schemas/Author'

    CreatePublisher:
      type: object
      required: [name, location]
      properties:
        name:
          type: string
          example: "name"
        location:
          type: string
          example: "location"
    Publisher:
      type: object
      properties:
        name:
          type: string
          example: "name"
        location:
          type: string
          example: "location"
    AllPublisher:
      type: array
      items:
        $ref: '#/components/schemas/Publisher'

    CreateBook:
      type: object
      required: [title, genre, author, publisher]
      properties:
        title:
          type: string
          example: "name"
        genre:
          type: string
          example: "location"
        author:
          $ref: '#/components/schemas/Author'
        publisher:
          $ref: '#/components/schemas/Publisher'
    Book:
      type: object
      properties:
        title:
          type: string
          example: "name"
        genre:
          type: string
          example: "location"
        author:
          $ref: '#/components/schemas/Author'
        publisher:
          $ref: '#/components/schemas/Publisher'
    AllBooks:
      type: array
      items:
        $ref: '#/components/schemas/Book'

